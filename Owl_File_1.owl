Prefix(:=<http://www.spotifytracks.org/2019/ontology#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(<http://www.spotifytracks.org/2019/ontology>

Declaration(Class(:Acousticness))
Declaration(Class(:Artist))
Declaration(Class(:AudioFeatures))
Declaration(Class(:Details))
Declaration(Class(:Duration))
Declaration(Class(:Genre))
Declaration(Class(:Instumentalness))
Declaration(Class(:Key))
Declaration(Class(:Loudness))
Declaration(Class(:Speechiness))
Declaration(Class(:Tempo))
Declaration(Class(:TimeSignature))
Declaration(Class(:Track))
Declaration(Class(:Track_ID))
Declaration(ObjectProperty(:hasAcousticness))
Declaration(ObjectProperty(:hasArtist))
Declaration(ObjectProperty(:hasAudioFeatures))
Declaration(ObjectProperty(:hasDetails))
Declaration(ObjectProperty(:hasDuration))
Declaration(ObjectProperty(:hasID))
Declaration(ObjectProperty(:hasInstrumentalness))
Declaration(ObjectProperty(:hasKey))
Declaration(ObjectProperty(:hasLoudness))
Declaration(ObjectProperty(:hasSpeechiness))
Declaration(ObjectProperty(:hasTempo))
Declaration(ObjectProperty(:hasTimeSignature))
Declaration(ObjectProperty(:hasTrack))
Declaration(DataProperty(:audienceNumber))
Declaration(DataProperty(:danceability))
Declaration(DataProperty(:energy))
Declaration(DataProperty(:liveness))
Declaration(DataProperty(:popularity))
Declaration(DataProperty(:soundEffect))
Declaration(DataProperty(:valence))
Declaration(NamedIndividual(:major))
Declaration(NamedIndividual(:minor))
############################
#   Object Properties
############################

# Object Property: :hasAcousticness (:hasAcousticness)

SubObjectPropertyOf(:hasAcousticness :hasAudioFeatures)

# Object Property: :hasDetails (:hasDetails)

SubObjectPropertyOf(:hasDetails owl:topObjectProperty)

# Object Property: :hasDuration (:hasDuration)

SubObjectPropertyOf(:hasDuration :hasDetails)

# Object Property: :hasID (:hasID)

SubObjectPropertyOf(:hasID :hasDetails)

# Object Property: :hasInstrumentalness (:hasInstrumentalness)

SubObjectPropertyOf(:hasInstrumentalness :hasAudioFeatures)

# Object Property: :hasKey (:hasKey)

SubObjectPropertyOf(:hasKey :hasAudioFeatures)

# Object Property: :hasLoudness (:hasLoudness)

SubObjectPropertyOf(:hasLoudness :hasAudioFeatures)

# Object Property: :hasSpeechiness (:hasSpeechiness)

SubObjectPropertyOf(:hasSpeechiness :hasAudioFeatures)

# Object Property: :hasTempo (:hasTempo)

SubObjectPropertyOf(:hasTempo :hasAudioFeatures)

# Object Property: :hasTimeSignature (:hasTimeSignature)

SubObjectPropertyOf(:hasTimeSignature :hasDetails)


############################
#   Data Properties
############################

# Data Property: :danceability (:danceability)

SubDataPropertyOf(:danceability :soundEffect)
DataPropertyDomain(:danceability :Track)
DataPropertyRange(:danceability DatatypeRestriction(xsd:double xsd:minInclusive "0.0"^^xsd:double xsd:maxInclusive "1.0"^^xsd:double))

# Data Property: :energy (:energy)

SubDataPropertyOf(:energy :soundEffect)

# Data Property: :liveness (:liveness)

SubDataPropertyOf(:liveness :audienceNumber)
DataPropertyDomain(:liveness :Track)
DataPropertyRange(:liveness xsd:double)
DataPropertyRange(:liveness DatatypeRestriction(xsd:double xsd:minInclusive "0.0"^^xsd:double xsd:maxInclusive "1.0"^^xsd:double))

# Data Property: :popularity (:popularity)

SubDataPropertyOf(:popularity :audienceNumber)
DataPropertyDomain(:popularity :Track)
DataPropertyRange(:popularity DatatypeRestriction(xsd:integer xsd:minInclusive "0"^^xsd:integer xsd:maxInclusive "100"^^xsd:integer))

# Data Property: :soundEffect (:soundEffect)

SubDataPropertyOf(:soundEffect owl:topDataProperty)

# Data Property: :valence (:valence)

SubDataPropertyOf(:valence :soundEffect)
DataPropertyDomain(:valence :Track)
DataPropertyRange(:valence xsd:decimal)


############################
#   Datatypes
############################

# Datatype: xsd:decimal (xsd:decimal)

DatatypeDefinition(xsd:decimal DatatypeRestriction(xsd:double xsd:minInclusive "0.0"^^xsd:double xsd:maxInclusive "1.0"^^xsd:double))


############################
#   Classes
############################

# Class: :Acousticness (:Acousticness)

SubClassOf(:Acousticness :AudioFeatures)

# Class: :Artist (:Artist)

EquivalentClasses(:Artist ObjectSomeValuesFrom(:hasTrack :Track))

# Class: :Duration (:Duration)

SubClassOf(:Duration :Details)

# Class: :Genre (:Genre)

EquivalentClasses(:Genre ObjectSomeValuesFrom(:hasArtist :Artist))

# Class: :Instumentalness (:Instumentalness)

SubClassOf(:Instumentalness :AudioFeatures)

# Class: :Key (:Key)

SubClassOf(:Key :AudioFeatures)

# Class: :Loudness (:Loudness)

SubClassOf(:Loudness :AudioFeatures)

# Class: :Speechiness (:Speechiness)

SubClassOf(:Speechiness :AudioFeatures)

# Class: :Tempo (:Tempo)

SubClassOf(:Tempo :AudioFeatures)

# Class: :TimeSignature (:TimeSignature)

SubClassOf(:TimeSignature :Details)

# Class: :Track (:Track)

EquivalentClasses(:Track ObjectSomeValuesFrom(:hasAcousticness :Acousticness))
EquivalentClasses(:Track ObjectSomeValuesFrom(:hasDuration :Duration))
EquivalentClasses(:Track ObjectSomeValuesFrom(:hasID :Track_ID))
EquivalentClasses(:Track ObjectSomeValuesFrom(:hasInstrumentalness :Instumentalness))
EquivalentClasses(:Track ObjectSomeValuesFrom(:hasKey :Key))
EquivalentClasses(:Track ObjectSomeValuesFrom(:hasLoudness :Loudness))
EquivalentClasses(:Track ObjectSomeValuesFrom(:hasSpeechiness :Speechiness))
EquivalentClasses(:Track ObjectSomeValuesFrom(:hasTempo :Tempo))
EquivalentClasses(:Track ObjectSomeValuesFrom(:hasTimeSignature :TimeSignature))
EquivalentClasses(:Track DataSomeValuesFrom(:danceability xsd:float))
EquivalentClasses(:Track DataSomeValuesFrom(:energy xsd:float))
EquivalentClasses(:Track DataSomeValuesFrom(:liveness xsd:float))
EquivalentClasses(:Track DataSomeValuesFrom(:popularity xsd:integer))
EquivalentClasses(:Track DataSomeValuesFrom(:valence xsd:float))

# Class: :Track_ID (:Track_ID)

SubClassOf(:Track_ID :Details)



)